name: "spack updater action"
description: "Given a local spack repository, compare a package to upstream spack and pull request appropriately."
inputs:
  package:
    description: package in local repo to check
    required: true
  user:
    default: user for to GitHub to PR
    required: true
  token:
    default: token authenticate to GitHub to PR
    required: true
  open_issue:
    description: given local changes, open an issue with a link for a pull request
    default: false
  pull_request:
    description: given remote changes, open a pull request here with updates
    default: false
  branch:
    description: upstream branch to open issue to request update (defaults to develop)
    default: ""
  local_branch:
    description: branch here to open pull request against (defaults to main)
    default: "main"
  upstream:
    description: upstream to open issue to request update (defaults to spack)
    default: ""
  repo:
    description: local repository with recipes (defaults to PWD)
    default: "."

runs:
  using: "composite"
  steps:
    - name: Install Dependencies
      env: 
        action_path: ${{ github.action_path }}
      shell: bash
      run: |
        cd ${action_path}
        pip install -r requirements.txt
        cd -

    - name: Build Package
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
        user: ${{ inputs.user }}
        repo: ${{ inputs.repo }}
        branch: ${{ inputs.branch }}
        upstream: ${{ inputs.upstream }}
        package: ${{ inputs.package }}
        open_issue: ${{ inputs.open_issue }}
        pull_request: ${{ inputs.pull_request }}
        action_path: ${{ github.action_path }}

      run: |
          cmd="python ${action_path}/update_package.py --repo ${repo} ${package}"
          if [[ "${upstream}" != "" ]]; then
              cmd="${cmd} --upstream ${upstream}"
          fi
          if [[ "${branch}" != "" ]]; then
              cmd="${cmd} --branch ${branch}"
          fi
          if [[ "${open_issue}" == "true" ]]; then
              cmd="${cmd} --open_issue"
          fi
          if [[ "${pull_request}" == "true" ]]; then
              cmd="${cmd} --pull_request"
          fi
          echo ${cmd}
          $cmd
      shell: bash

    - name: Pull request changes
      if: ${{ env.spack_updater_changes == 'true' }}
      shell: bash
      env:
        GITHUB_ACTOR: ${{ inputs.user }}
        GITHUB_TOKEN: ${{ inputs.token }}
        BRANCH_AGAINST: ${{ inputs.local_branch }}
        package: ${{ inputs.package }}
        repo: ${{ inputs.repo }}
      run: |
          printf "GitHub Actor: ${GITHUB_ACTOR}\n"
          export BRANCH_FROM="update-package/${package}-$(date '+%Y-%m-%d')"
          git remote set-url origin "https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
          git branch
          git checkout -b "${BRANCH_FROM}" || git checkout "${BRANCH_FROM}"
          git branch
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@users.noreply.github.com"
          repo_path=$(realpath "${repo}")
          tree ${repo_path}
          repo_path=${repo_path}/packages/${package}
          git add $repo_path/*
          if git diff-index --quiet HEAD --; then
              printf "No changes\n"
          else
              printf "Changes\n"
              git commit -m "Automated deployment to update package ${package} $(date '+%Y-%m-%d')"
              git push origin "${BRANCH_FROM}"
              echo "open_pr=1" >> $GITHUB_ENV
          fi
          echo "PULL_REQUEST_FROM_BRANCH=${BRANCH_FROM}" >> $GITHUB_ENV

    - name: Open Pull Request
      if: ${{ env.open_pr != '' }}
      uses: vsoch/pull-request-action@1.0.19
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
        PULL_REQUEST_BRANCH: ${{ inputs.local_branch }}
